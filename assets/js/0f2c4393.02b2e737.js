"use strict";(self.webpackChunkaloong_docs=self.webpackChunkaloong_docs||[]).push([[5775],{71949:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"tailwind-v4/setup-tailwind-v4","title":"Setup Tailwind v4","description":"Tailwind CSS v4 brings significant improvements over previous versions, including a new hsl color system, better performance, and expanded utility classes. This guide will help you set up Tailwind CSS v4 for your Next.js project, following the official Tailwind CSS installation guide.","source":"@site/docs/tailwind-v4/setup-tailwind-v4.md","sourceDirName":"tailwind-v4","slug":"/tailwind-v4/setup-tailwind-v4","permalink":"/aloong-docs/docs/tailwind-v4/setup-tailwind-v4","draft":false,"unlisted":false,"editUrl":"https://github.com/aloong-planet/aloong-docs/tree/main/docs/tailwind-v4/setup-tailwind-v4.md","tags":[],"version":"current","sidebarPosition":0,"frontMatter":{"sidebar_position":0,"title":"Setup Tailwind v4"},"sidebar":"tutorialSidebar","previous":{"title":"Github Actions","permalink":"/aloong-docs/docs/github-actions"},"next":{"title":"Rounding Corners","permalink":"/aloong-docs/docs/tailwind-v4/rounding-corners"}}');var s=i(74848),o=i(28453);const t={sidebar_position:0,title:"Setup Tailwind v4"},a="Setting Up Tailwind CSS v4",l={},d=[{value:"Installation Requirements",id:"installation-requirements",level:2},{value:"Creating the Configuration Files",id:"creating-the-configuration-files",level:2},{value:"1. Configure PostCSS",id:"1-configure-postcss",level:3},{value:"2. Create a Tailwind Config File (Optional)",id:"2-create-a-tailwind-config-file-optional",level:3},{value:"Integrating with CSS",id:"integrating-with-css",level:2},{value:"1. Create a CSS file",id:"1-create-a-css-file",level:3},{value:"2. Import CSS in Your Application",id:"2-import-css-in-your-application",level:3},{value:"For App Router (Next.js 13+)",id:"for-app-router-nextjs-13",level:4},{value:"For Pages Router",id:"for-pages-router",level:4},{value:"Key Differences in Tailwind v4",id:"key-differences-in-tailwind-v4",level:2},{value:"Testing Your Configuration",id:"testing-your-configuration",level:2},{value:"Setting Up Prettier for Tailwind CSS",id:"setting-up-prettier-for-tailwind-css",level:2},{value:"Installation",id:"installation",level:3},{value:"Configuration",id:"configuration",level:3},{value:"Adding NPM Scripts",id:"adding-npm-scripts",level:3},{value:"Usage",id:"usage",level:3},{value:"Conclusion",id:"conclusion",level:2}];function c(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"setting-up-tailwind-css-v4",children:"Setting Up Tailwind CSS v4"})}),"\n",(0,s.jsxs)(e.p,{children:["Tailwind CSS v4 brings significant improvements over previous versions, including a new hsl color system, better performance, and expanded utility classes. This guide will help you set up Tailwind CSS v4 for your Next.js project, following the ",(0,s.jsx)(e.a,{href:"https://tailwindcss.com/docs/installation/using-postcss",children:"official Tailwind CSS installation guide"}),"."]}),"\n",(0,s.jsx)(e.h2,{id:"installation-requirements",children:"Installation Requirements"}),"\n",(0,s.jsx)(e.p,{children:"Install Tailwind CSS, its PostCSS plugin, and PostCSS itself:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npm install tailwindcss @tailwindcss/postcss postcss\n"})}),"\n",(0,s.jsx)(e.p,{children:"For those using other package managers:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Yarn\nyarn add tailwindcss @tailwindcss/postcss postcss\n\n# pnpm\npnpm add tailwindcss @tailwindcss/postcss postcss\n"})}),"\n",(0,s.jsx)(e.h2,{id:"creating-the-configuration-files",children:"Creating the Configuration Files"}),"\n",(0,s.jsx)(e.h3,{id:"1-configure-postcss",children:"1. Configure PostCSS"}),"\n",(0,s.jsxs)(e.p,{children:["Create a ",(0,s.jsx)(e.code,{children:"postcss.config.mjs"})," file in the root of your project:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-javascript",children:'export default {\n  plugins: {\n    "@tailwindcss/postcss": {},\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-create-a-tailwind-config-file-optional",children:"2. Create a Tailwind Config File (Optional)"}),"\n",(0,s.jsxs)(e.p,{children:["If you need to customize Tailwind, create a ",(0,s.jsx)(e.code,{children:"tailwind.config.ts"})," file in the root of your project:"]}),"\n",(0,s.jsx)(e.p,{children:"Here's a example configuration based on a modern Next.js project:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:'import type {Config} from "tailwindcss";\n\nconst config: Config = {\n    content: [\n        "./pages/**/*.{js,ts,jsx,tsx,mdx}",\n        "./components/**/*.{js,ts,jsx,tsx,mdx}",\n        "./app/**/*.{js,ts,jsx,tsx,mdx}",\n        "./src/**/*.{js,ts,jsx,tsx,mdx}",\n    ],\n    theme: {\n        extend: {\n            colors: {\n                background: \'hsl(var(--background) / <alpha-value>)\',\n                foreground: \'hsl(var(--foreground) / <alpha-value>)\',\n                card: {\n                    DEFAULT: \'hsl(var(--card) / <alpha-value>)\',\n                    foreground: \'hsl(var(--card-foreground) / <alpha-value>)\'\n                },\n                primary: {\n                    DEFAULT: \'hsl(var(--primary) / <alpha-value>)\',\n                    foreground: \'hsl(var(--primary-foreground) / <alpha-value>)\'\n                },\n                secondary: {\n                    DEFAULT: \'hsl(var(--secondary) / <alpha-value>)\',\n                    foreground: \'hsl(var(--secondary-foreground) / <alpha-value>)\'\n                },\n                muted: {\n                    DEFAULT: \'hsl(var(--muted) / <alpha-value>)\',\n                    foreground: \'hsl(var(--muted-foreground) / <alpha-value>)\'\n                },\n                accent: {\n                    DEFAULT: \'hsl(var(--accent) / <alpha-value>)\',\n                    foreground: \'hsl(var(--accent-foreground) / <alpha-value>)\'\n                },\n                destructive: {\n                    DEFAULT: \'hsl(var(--destructive) / <alpha-value>)\',\n                    foreground: \'hsl(var(--destructive-foreground) / <alpha-value>)\'\n                },\n                border: \'hsl(var(--border) / <alpha-value>)\',\n                input: \'hsl(var(--input) / <alpha-value>)\',\n                ring: \'hsl(var(--ring) / <alpha-value>)\',\n            },\n            borderRadius: {\n                lg: "var(--radius)",\n                md: "calc(var(--radius) - 2px)",\n                sm: "calc(var(--radius) - 4px)",\n            },\n            keyframes: {\n                "accordion-down": {\n                    from: { height: "0" },\n                    to: { height: "var(--radix-accordion-content-height)" },\n                },\n                "accordion-up": {\n                    from: { height: "var(--radix-accordion-content-height)" },\n                    to: { height: "0" },\n                },\n            },\n            animation: {\n                "accordion-down": "accordion-down 0.2s ease-out",\n                "accordion-up": "accordion-up 0.2s ease-out",\n            },\n        },\n    },\n    plugins: [require("@tailwindcss/typography")],\n};\n\nexport default config;\n'})}),"\n",(0,s.jsx)(e.h2,{id:"integrating-with-css",children:"Integrating with CSS"}),"\n",(0,s.jsx)(e.h3,{id:"1-create-a-css-file",children:"1. Create a CSS file"}),"\n",(0,s.jsxs)(e.p,{children:["Create a global CSS file (e.g., ",(0,s.jsx)(e.code,{children:"app/globals.css"})," or ",(0,s.jsx)(e.code,{children:"styles/globals.css"}),") and import Tailwind CSS:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-css",children:'@import "tailwindcss";\n\n@layer base {\n  :root {\n    --background: 0 0% 100%;\n    --foreground: 240 10% 3.9%;\n\n    --card: 0 0% 100%;\n    --card-foreground: 240 10% 3.9%;\n\n    --popover: 0 0% 100%;\n    --popover-foreground: 240 10% 3.9%;\n\n    --primary: 240 5.9% 10%;\n    --primary-foreground: 0 0% 98%;\n\n    --secondary: 240 4.8% 95.9%;\n    --secondary-foreground: 240 5.9% 10%;\n\n    --muted: 240 4.8% 95.9%;\n    --muted-foreground: 240 3.8% 46.1%;\n\n    --accent: 240 4.8% 95.9%;\n    --accent-foreground: 240 5.9% 10%;\n\n    --destructive: 0 84.2% 60.2%;\n    --destructive-foreground: 0 0% 98%;\n\n    --border: 240 5.9% 90%;\n    --input: 240 5.9% 90%;\n    --ring: 240 5.9% 10%;\n\n    --radius: 0.5rem;\n  }\n\n  .dark {\n    --background: 240 10% 3.9%;\n    --foreground: 0 0% 98%;\n\n    --card: 240 10% 3.9%;\n    --card-foreground: 0 0% 98%;\n\n    --popover: 240 10% 3.9%;\n    --popover-foreground: 0 0% 98%;\n\n    --primary: 0 0% 98%;\n    --primary-foreground: 240 5.9% 10%;\n\n    --secondary: 240 3.7% 15.9%;\n    --secondary-foreground: 0 0% 98%;\n\n    --muted: 240 3.7% 15.9%;\n    --muted-foreground: 240 5% 64.9%;\n\n    --accent: 240 3.7% 15.9%;\n    --accent-foreground: 0 0% 98%;\n\n    --destructive: 0 62.8% 30.6%;\n    --destructive-foreground: 0 0% 98%;\n\n    --border: 240 3.7% 15.9%;\n    --input: 240 3.7% 15.9%;\n    --ring: 240 4.9% 83.9%;\n  }\n}\n\n@layer base {\n  * {\n    @apply border-border;\n  }\n  body {\n    @apply bg-background text-foreground;\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"2-import-css-in-your-application",children:"2. Import CSS in Your Application"}),"\n",(0,s.jsx)(e.p,{children:"Import your CSS file in your application:"}),"\n",(0,s.jsx)(e.h4,{id:"for-app-router-nextjs-13",children:"For App Router (Next.js 13+)"}),"\n",(0,s.jsxs)(e.p,{children:["In ",(0,s.jsx)(e.code,{children:"app/layout.tsx"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import './globals.css';\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body>{children}</body>\n    </html>\n  );\n}\n"})}),"\n",(0,s.jsx)(e.h4,{id:"for-pages-router",children:"For Pages Router"}),"\n",(0,s.jsxs)(e.p,{children:["In ",(0,s.jsx)(e.code,{children:"pages/_app.tsx"}),":"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-typescript",children:"import '../styles/globals.css';\nimport type { AppProps } from 'next/app';\n\nfunction MyApp({ Component, pageProps }: AppProps) {\n  return <Component {...pageProps} />;\n}\n\nexport default MyApp;\n"})}),"\n",(0,s.jsx)(e.h2,{id:"key-differences-in-tailwind-v4",children:"Key Differences in Tailwind v4"}),"\n",(0,s.jsx)(e.p,{children:"Here are some important changes in Tailwind CSS v4:"}),"\n",(0,s.jsxs)(e.ol,{children:["\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"New Import System"}),": In v4, you simply use ",(0,s.jsx)(e.code,{children:'@import "tailwindcss"'})," instead of the directive-based approach."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"PostCSS Integration"}),": The new ",(0,s.jsx)(e.code,{children:"@tailwindcss/postcss"})," package is used as a plugin in your PostCSS config."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"HSL Color System"}),": The new configuration uses HSL color values with CSS variables for enhanced theming."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"Improved Performance"}),": Tailwind v4 includes significant performance improvements for build times."]}),"\n"]}),"\n",(0,s.jsxs)(e.li,{children:["\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.strong,{children:"TypeScript Configuration"}),": Using ",(0,s.jsx)(e.code,{children:"tailwind.config.ts"})," provides better type checking (optional)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(e.h2,{id:"testing-your-configuration",children:"Testing Your Configuration"}),"\n",(0,s.jsx)(e.p,{children:"After setting up your Tailwind CSS v4 configuration, create a simple component to test it:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-tsx",children:'export default function TestComponent() {\n  return (\n    <div className="p-4">\n      <h1 className="text-3xl font-bold text-primary">\n        Tailwind CSS v4 is working!\n      </h1>\n      <p className="mt-2 text-muted-foreground">\n        This text should be using your configured color scheme.\n      </p>\n      <button className="mt-4 px-4 py-2 rounded-md bg-primary text-primary-foreground hover:bg-primary/90">\n        Styled Button\n      </button>\n    </div>\n  );\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"If your styles are applied correctly, your Tailwind CSS v4 configuration is working properly."}),"\n",(0,s.jsx)(e.h2,{id:"setting-up-prettier-for-tailwind-css",children:"Setting Up Prettier for Tailwind CSS"}),"\n",(0,s.jsxs)(e.p,{children:["To ensure consistent class ordering in your Tailwind CSS code, you can install and configure the ",(0,s.jsx)(e.code,{children:"prettier-plugin-tailwindcss"})," plugin. This plugin automatically sorts your Tailwind CSS classes according to the recommended class order, making your code more readable and maintainable."]}),"\n",(0,s.jsx)(e.h3,{id:"installation",children:"Installation"}),"\n",(0,s.jsx)(e.p,{children:"Install Prettier and the Tailwind CSS plugin:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"npm install -D prettier prettier-plugin-tailwindcss\n"})}),"\n",(0,s.jsx)(e.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(e.p,{children:["Create a ",(0,s.jsx)(e.code,{children:".prettierrc"})," file in your project root with the following configuration:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "trailingComma": "es5",\n  "semi": true,\n  "tabWidth": 2,\n  "singleQuote": true,\n  "jsxSingleQuote": true,\n  "printWidth": 100,\n  "tailwindFunctions": ["clsx"],\n  "plugins": ["prettier-plugin-tailwindcss"]\n}\n'})}),"\n",(0,s.jsx)(e.p,{children:"Here's an explanation of each parameter in the configuration:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"trailingComma"}),": Adds trailing commas where valid in ES5 (arrays, objects)"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"semi"}),": Adds semicolons at the end of statements"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"tabWidth"}),": Sets the number of spaces per indentation level"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"singleQuote"}),": Uses single quotes instead of double quotes"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"jsxSingleQuote"}),": Uses single quotes in JSX"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"printWidth"}),": Sets the line length where Prettier will try to wrap"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"tailwindFunctions"}),": Specifies functions where Tailwind classes should be sorted (like ",(0,s.jsx)(e.code,{children:"clsx()"}),")"]}),"\n",(0,s.jsxs)(e.li,{children:[(0,s.jsx)(e.code,{children:"plugins"}),": Enables the Tailwind CSS plugin for Prettier"]}),"\n"]}),"\n",(0,s.jsx)(e.h3,{id:"adding-npm-scripts",children:"Adding NPM Scripts"}),"\n",(0,s.jsxs)(e.p,{children:["Add these scripts to your ",(0,s.jsx)(e.code,{children:"package.json"})," for easier formatting:"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-json",children:'{\n  "scripts": {\n    "format": "prettier --write --ignore-path .gitignore .",\n    "check": "prettier --check --ignore-path .gitignore ."\n  }\n}\n'})}),"\n",(0,s.jsx)(e.h3,{id:"usage",children:"Usage"}),"\n",(0,s.jsx)(e.p,{children:"You can now run the following commands:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-bash",children:"# Format all files\nnpm run format\n\n# Check if files are formatted correctly\nnpm run check\n"})}),"\n",(0,s.jsx)(e.p,{children:"This will ensure your Tailwind CSS classes are consistently ordered, making your code more readable and maintainable."}),"\n",(0,s.jsx)(e.h2,{id:"conclusion",children:"Conclusion"}),"\n",(0,s.jsx)(e.p,{children:"Tailwind CSS v4 offers a more powerful and efficient approach to styling your Next.js applications. The simplified import system and improved performance make it an excellent choice for modern web development."}),"\n",(0,s.jsx)(e.p,{children:"For more detailed information, refer to these official resources:"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://tailwindcss.com/docs/installation/using-postcss",children:"Tailwind CSS Installation with PostCSS"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://tailwindcss.com/docs/installation/framework-guides",children:"Framework Guides"})}),"\n",(0,s.jsx)(e.li,{children:(0,s.jsx)(e.a,{href:"https://tailwindcss.com/docs",children:"Tailwind CSS v4 Documentation"})}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(c,{...n})}):c(n)}},28453:(n,e,i)=>{i.d(e,{R:()=>t,x:()=>a});var r=i(96540);const s={},o=r.createContext(s);function t(n){const e=r.useContext(o);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:t(n.components),r.createElement(o.Provider,{value:e},n.children)}}}]);